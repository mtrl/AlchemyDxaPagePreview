@model ItemList
@helper TabId(string panelId, int index)
{
    @("tab" + panelId + "_" + index)
}
<article class="rich-text" @Markup.Entity(Model)>
    <div class="content">
        @if (Model.Headline != null)
        {
            <h1 @Markup.Property(Model, "Headline")>@Model.Headline</h1>
        }
        @if (Model.ItemListElements.Count > 0)
        {
            string panelId = Guid.NewGuid().ToString("N");
            <div class="panel panel-default">
                <div class="panel-body tab-container">
                    <!-- Tab dropdown -->
                    <div class="dropdown visible-xs">
                        <select class="tab-group form-control" data-toggle="tab">
                            @{ int i = 0; }
                            @foreach (Teaser element in Model.ItemListElements)
                            {
                                <option value="#@TabId(panelId, i)" data-toggle="tab">@element.Headline</option>
                                i++;
                            }
                        </select>
                    </div>
                    <!-- Tab tips -->
                    <ul class="tab-group nav nav-tabs hidden-xs">
                        @{ i = 0; }
                        @foreach (Teaser element in Model.ItemListElements)
                        {
                            <li class="@(i==0?"active":"")">
                                <a href="#@TabId(panelId, i)" data-toggle="tab" @Markup.Property(element, "Headline")>@element.Headline</a>
                            </li>
                            i++;
                        }
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        @{ i = 0; }
                        @foreach (Teaser element in Model.ItemListElements)
                        {
                            <div class="tab-pane @(i == 0 ? "active" : "")" id="@TabId(panelId, i)">
                                <div @Markup.Property(element, "Text")>
                                    @Html.Raw(element.Text)
                                </div>
                                @if (element.Media != null)
                                {
                                    <figure @Markup.Property(element, "Media")>
                                        @Html.Media(element.Media)
                                    </figure>
                                }
                                @if (element.Link.IsValidLink())
                                {
                                    <p @Markup.Property(element, "Link.LinkText")>
                                        <a href="@element.Link.Url" title="@element.Link.AlternateText" class="btn btn-primary">@(element.Link.LinkText ?? Html.Resource("core.readMoreLinkText"))</a>
                                    </p>
                                }
                            </div>
                            i++;
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</article>